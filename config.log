This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Specfem3D configure 4.0.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ./configure FC=ifort CC=icc MPIFC=mpif90 --with-mpi -enable-vectorization

## --------- ##
## Platform. ##
## --------- ##

hostname = nia-login06.scinet.local
uname -m = x86_64
uname -r = 3.10.0-1160.99.1.el7.x86_64
uname -s = Linux
uname -v = #1 SMP Wed Sep 13 14:19:20 UTC 2023

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/bin/
PATH: /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64/
PATH: /scinet/intel/2019u4/debugger_2019/gdb/intel64/bin/
PATH: /opt/slurm/bin/
PATH: /scinet/niagara/software/2019b/core/bin/
PATH: /usr/local/bin/
PATH: /usr/bin/
PATH: /usr/local/sbin/
PATH: /usr/sbin/
PATH: /scinet/niagara/bin/
PATH: /usr/lpp/mmfs/bin/
PATH: /home/l/liuqy/liutia97/sac/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2914: looking for aux files: config.guess config.sub
configure:2927:  trying ./
configure:2956:   ./config.guess found
configure:2956:   ./config.sub found
configure:3220: checking build system type
configure:3235: result: x86_64-unknown-linux-gnu
configure:3255: checking host system type
configure:3269: result: x86_64-unknown-linux-gnu
configure:3914: checking for Fortran compiler version
configure:3923: ifort --version >&5
ifort (IFORT) 19.0.4.243 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:3934: $? = 0
configure:3923: ifort -v >&5
__INTEL_PRE_FFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
ifort version 19.0.4.243
configure:3934: $? = 0
configure:3923: ifort -V >&5
Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:3934: $? = 0
configure:3923: ifort -qversion >&5
ifort: command line warning #10006: ignoring unknown option '-qversion'
ifort: command line error: no files specified; for help type "ifort -help"
configure:3934: $? = 1
configure:3949: checking whether the Fortran compiler works
configure:3971: ifort    conftest.f  >&5
configure:3975: $? = 0
configure:4025: result: yes
configure:4028: checking for Fortran compiler default output file name
configure:4030: result: a.out
configure:4036: checking for suffix of executables
configure:4043: ifort -o conftest    conftest.f  >&5
configure:4047: $? = 0
configure:4070: result: 
configure:4086: checking whether we are cross compiling
configure:4094: ifort -o conftest    conftest.f  >&5
configure:4098: $? = 0
configure:4105: ./conftest
configure:4109: $? = 0
configure:4124: result: no
configure:4129: checking for suffix of object files
configure:4146: ifort -c   conftest.f >&5
configure:4150: $? = 0
configure:4172: result: o
configure:4180: checking whether the compiler supports GNU Fortran
configure:4194: ifort -c   conftest.F >&5
conftest.F(3): error #5082: Syntax error, found END-OF-STATEMENT when expecting one of: ( : % [ . = =>
       choke me
---------------^
conftest.F(3): error #6218: This statement is positioned incorrectly and/or has syntax errors.
       choke me
-------^
compilation aborted for conftest.F (code 1)
configure:4194: $? = 1
configure: failed program was:
|       program main
| #ifndef __GNUC__
|        choke me
| #endif
| 
|       end
configure:4204: result: no
configure:4212: checking whether ifort accepts -g
configure:4224: ifort -c -g  conftest.f >&5
configure:4224: $? = 0
configure:4233: result: yes
configure:4272: running /bin/sh ./flags.guess
configure:4283: checking how to get verbose linking output from ifort
configure:4294: ifort -c -g  conftest.f >&5
configure:4294: $? = 0
configure:4313: ifort -o conftest -g -v conftest.f
__INTEL_PRE_FFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
ifort version 19.0.4.243
/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64/fortcom    -D__INTEL_COMPILER=1900 -D__INTEL_COMPILER_UPDATE=4 -D__unix__ -D__unix -D__linux__ -D__linux -D__gnu_linux__ -Dunix -Dlinux -D__ELF__ -D__x86_64 -D__x86_64__ -D__amd64 -D__amd64__ -D__INTEL_COMPILER_BUILD_DATE=20190416 -D__INTEL_OFFLOAD -D__i686 -D__i686__ -D__pentiumpro -D__pentiumpro__ -D__tune_i686__ -D__tune_pentiumpro__ -D__pentium4 -D__pentium4__ -D__tune_pentium4__ -D__SSE2__ -D__SSE2_MATH__ -D__SSE__ -D__SSE_MATH__ -D__MMX__ -mGLOB_pack_sort_init_list -I. -I/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/pstl/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/include -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/intel64 -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/icc -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include -I/usr/local/include -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include-fixed -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../include/ -I/usr/include "-fp_modbits honor_f32_conversion" "-fp_modbits honor_f64_conversion" -O0 -g2 "-reentrancy threaded" -simd -offload_host -mGLOB_em64t=TRUE -mP1OPT_version=19.0-intel64 -mGLOB_diag_file=/tmp/ifort7tqx2u.diag -mGLOB_long_size_64 -mGLOB_routine_pointer_size_64 -mGLOB_source_language=GLOB_SOURCE_LANGUAGE_F90 -mP2OPT_static_promotion -mP1OPT_print_version=FALSE -mCG_use_gas_got_workaround=F -mP2OPT_align_option_used=TRUE -mGLOB_gcc_version=740 "-mGLOB_options_string=-gcc-name=core-gcc -gxx-name=core-g++ -o conftest -g -v" -mGLOB_cxx_limited_range=FALSE -mCG_extend_parms=FALSE -mGLOB_compiler_bin_directory=/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64 -mP3OPT_emit_line_numbers -mP2OPT_suppress_unreferenced_locals=FALSE -mGLOB_debug_target=GLOB_DEBUG_TARGET_ALL -mDEBUG_info_level=2 -mDEBUG_use_indirect_strings=TRUE -mIPOPT_ninl_debug_info=TRUE -mDEBUG_emit_dwarf_inline_info=TRUE -mDEBUG_debug_ranges=TRUE -mGLOB_debug_format=GLOB_DEBUG_FORMAT_DWARF40 -mGLOB_as_output_backup_file_name=/tmp/ifortechjTDas_.s -mGLOB_dashboard_use_source_name -mGLOB_uarch_tuning=0x0 -mGLOB_product_id_code=0x22006d91 -mGLOB_maintain_errno -mGLOB_noinline_intrinsics -mGLOB_use_base_pointer=1 -mCG_bnl_movbe=T -mGLOB_extended_instructions=0x8 -mP3OPT_use_mspp_call_convention -mP2OPT_subs_out_of_bound=FALSE -mP2OPT_disam_type_based_disam=2 -mGLOB_ansi_alias -mIPOPT_ninl_limit=0 -mIPOPT_ninl_user_level=0 -mPGOPTI_value_profile_use=T -mGLOB_opt_report_use_source_name -mP2OPT_hpo_omp_simd_only=FALSE -mP2OPT_gen_linux_const_pooling=FALSE -mGLOB_offload_mode=1 -mP2OPT_offload_unique_var_string=ifort0069704562p8u2GV -mGLOB_opt_level=0 -mIPOPT_args_in_regs=0 -mP2OPT_disam_assume_nonstd_intent_in=FALSE -mGLOB_imf_mapping_library=/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64/libiml_attr.so -mIPOPT_single_file_compile_and_link=TRUE -mP2OPT_hlo_embed_loopinfo -mPGOPTI_gen_threadsafe_level=0 -mIPOPT_lto_object_enabled -mIPOPT_lto_object_value=1 -mIPOPT_obj_output_file_name=/tmp/ifort7tqx2u.o -mIPOPT_whole_archive_fixup_file_name=/tmp/ifortwarchQgKeBV -mGLOB_linker_version=2.27 -mGLOB_linker=ld -mGLOB_driver_tempfile_name=/tmp/iforttempfileHHcms4 -mP3OPT_asm_target=P3OPT_ASM_TARGET_GAS -mGLOB_async_unwind_tables=TRUE -mGLOB_obj_output_file=/tmp/ifort7tqx2u.o -mGLOB_source_dialect=GLOB_SOURCE_DIALECT_FORTRAN -mP1OPT_source_file_name=conftest.f -mP1OPT_full_source_file_name=/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.f -mP2OPT_symtab_type_copy=true conftest.f
#include "..." search starts here:
#include <...> search starts here:
 .
 /scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/pstl/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/include
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/intel64
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/icc
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include
 /usr/local/include
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include-fixed
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../include/
 /usr/include
End of search list.
ld    /lib/../lib64/crt1.o /lib/../lib64/crti.o /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/crtbegin.o --eh-frame-hdr --build-id -dynamic-linker /lib64/ld-linux-x86-64.so.2 -m elf_x86_64 -o conftest /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/for_main.o -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib /tmp/ifort7tqx2u.o -Bdynamic -Bstatic -lifport -lifcoremt -limf -lsvml -Bdynamic -lm -Bstatic -lipgo -lirc -Bdynamic -lpthread -Bstatic -lsvml -Bdynamic -lc -lgcc -lgcc_s -Bstatic -lirc_s -Bdynamic -ldl -lc /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/crtend.o /lib/../lib64/crtn.o
configure:4396: result: -v
configure:4398: checking for Fortran libraries of ifort
configure:4422: ifort -o conftest -g -v conftest.f
__INTEL_PRE_FFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
ifort version 19.0.4.243
/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64/fortcom    -D__INTEL_COMPILER=1900 -D__INTEL_COMPILER_UPDATE=4 -D__unix__ -D__unix -D__linux__ -D__linux -D__gnu_linux__ -Dunix -Dlinux -D__ELF__ -D__x86_64 -D__x86_64__ -D__amd64 -D__amd64__ -D__INTEL_COMPILER_BUILD_DATE=20190416 -D__INTEL_OFFLOAD -D__i686 -D__i686__ -D__pentiumpro -D__pentiumpro__ -D__tune_i686__ -D__tune_pentiumpro__ -D__pentium4 -D__pentium4__ -D__tune_pentium4__ -D__SSE2__ -D__SSE2_MATH__ -D__SSE__ -D__SSE_MATH__ -D__MMX__ -mGLOB_pack_sort_init_list -I. -I/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/pstl/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/include -I/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/include -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/intel64 -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/icc -I/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include -I/usr/local/include -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include-fixed -I/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../include/ -I/usr/include "-fp_modbits honor_f32_conversion" "-fp_modbits honor_f64_conversion" -O0 -g2 "-reentrancy threaded" -simd -offload_host -mGLOB_em64t=TRUE -mP1OPT_version=19.0-intel64 -mGLOB_diag_file=/tmp/ifortuRqT2N.diag -mGLOB_long_size_64 -mGLOB_routine_pointer_size_64 -mGLOB_source_language=GLOB_SOURCE_LANGUAGE_F90 -mP2OPT_static_promotion -mP1OPT_print_version=FALSE -mCG_use_gas_got_workaround=F -mP2OPT_align_option_used=TRUE -mGLOB_gcc_version=740 "-mGLOB_options_string=-gcc-name=core-gcc -gxx-name=core-g++ -o conftest -g -v" -mGLOB_cxx_limited_range=FALSE -mCG_extend_parms=FALSE -mGLOB_compiler_bin_directory=/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64 -mP3OPT_emit_line_numbers -mP2OPT_suppress_unreferenced_locals=FALSE -mGLOB_debug_target=GLOB_DEBUG_TARGET_ALL -mDEBUG_info_level=2 -mDEBUG_use_indirect_strings=TRUE -mIPOPT_ninl_debug_info=TRUE -mDEBUG_emit_dwarf_inline_info=TRUE -mDEBUG_debug_ranges=TRUE -mGLOB_debug_format=GLOB_DEBUG_FORMAT_DWARF40 -mGLOB_as_output_backup_file_name=/tmp/ifortKeYhlXas_.s -mGLOB_dashboard_use_source_name -mGLOB_uarch_tuning=0x0 -mGLOB_product_id_code=0x22006d91 -mGLOB_maintain_errno -mGLOB_noinline_intrinsics -mGLOB_use_base_pointer=1 -mCG_bnl_movbe=T -mGLOB_extended_instructions=0x8 -mP3OPT_use_mspp_call_convention -mP2OPT_subs_out_of_bound=FALSE -mP2OPT_disam_type_based_disam=2 -mGLOB_ansi_alias -mIPOPT_ninl_limit=0 -mIPOPT_ninl_user_level=0 -mPGOPTI_value_profile_use=T -mGLOB_opt_report_use_source_name -mP2OPT_hpo_omp_simd_only=FALSE -mP2OPT_gen_linux_const_pooling=FALSE -mGLOB_offload_mode=1 -mP2OPT_offload_unique_var_string=ifort0554444762i0NOUc -mGLOB_opt_level=0 -mIPOPT_args_in_regs=0 -mP2OPT_disam_assume_nonstd_intent_in=FALSE -mGLOB_imf_mapping_library=/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/bin/intel64/libiml_attr.so -mIPOPT_single_file_compile_and_link=TRUE -mP2OPT_hlo_embed_loopinfo -mPGOPTI_gen_threadsafe_level=0 -mIPOPT_lto_object_enabled -mIPOPT_lto_object_value=1 -mIPOPT_obj_output_file_name=/tmp/ifortuRqT2N.o -mIPOPT_whole_archive_fixup_file_name=/tmp/ifortwarchqE2rWf -mGLOB_linker_version=2.27 -mGLOB_linker=ld -mGLOB_driver_tempfile_name=/tmp/iforttempfileEllcfp -mP3OPT_asm_target=P3OPT_ASM_TARGET_GAS -mGLOB_async_unwind_tables=TRUE -mGLOB_obj_output_file=/tmp/ifortuRqT2N.o -mGLOB_source_dialect=GLOB_SOURCE_DIALECT_FORTRAN -mP1OPT_source_file_name=conftest.f -mP1OPT_full_source_file_name=/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.f -mP2OPT_symtab_type_copy=true conftest.f
#include "..." search starts here:
#include <...> search starts here:
 .
 /scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/pstl/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/include
 /scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/include
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/intel64
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include/icc
 /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/include
 /usr/local/include
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/include-fixed
 /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../include/
 /usr/include
End of search list.
ld    /lib/../lib64/crt1.o /lib/../lib64/crti.o /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/crtbegin.o --eh-frame-hdr --build-id -dynamic-linker /lib64/ld-linux-x86-64.so.2 -m elf_x86_64 -o conftest /gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/for_main.o -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib /tmp/ifortuRqT2N.o -Bdynamic -Bstatic -lifport -lifcoremt -limf -lsvml -Bdynamic -lm -Bstatic -lipgo -lirc -Bdynamic -lpthread -Bstatic -lsvml -Bdynamic -lc -lgcc -lgcc_s -Bstatic -lirc_s -Bdynamic -ldl -lc /gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/crtend.o /lib/../lib64/crtn.o
configure:4638: result:  -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl
configure:4711: checking for gcc
configure:4743: result: icc
configure:5096: checking for C compiler version
configure:5105: icc --version >&5
icc (ICC) 19.0.4.243 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:5116: $? = 0
configure:5105: icc -v >&5
__INTEL_PRE_CFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
icc version 19.0.4.243 (gcc version 7.4.0 compatibility)
configure:5116: $? = 0
configure:5105: icc -V >&5
Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:5116: $? = 0
configure:5105: icc -qversion >&5
icc: command line warning #10006: ignoring unknown option '-qversion'
icc: command line error: no files specified; for help type "icc -help"
configure:5116: $? = 1
configure:5105: icc -version >&5
icc: command line warning #10006: ignoring unknown option '-version'
icc: command line error: no files specified; for help type "icc -help"
configure:5116: $? = 1
configure:5120: checking whether the compiler supports GNU C
configure:5148: icc -c   conftest.c >&5
configure:5148: $? = 0
configure:5158: result: yes
configure:5169: checking whether icc accepts -g
configure:5198: icc -c -g  conftest.c >&5
configure:5198: $? = 0
configure:5258: result: yes
configure:5278: checking for icc option to enable C11 features
configure:5293: icc  -c -g -O2  conftest.c >&5
configure:5293: $? = 0
configure:5311: result: none needed
configure:5427: checking for dummy main to link with Fortran libraries
configure:5462: icc -o conftest -g -O2   conftest.c   -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl >&5
configure:5462: $? = 0
configure:5509: result: none
configure:5541: checking for Fortran name-mangling scheme
configure:5555: ifort -c -g  conftest.f >&5
configure:5555: $? = 0
configure:5594: icc -o conftest -g -O2   conftest.c cfortran_test.o   -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl >&5
/tmp/iccfE9bm4.o: In function `main':
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:25: undefined reference to `foobar'
configure:5594: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| char foobar ();
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| return foobar ();
|   ;
|   return 0;
| }
configure:5594: icc -o conftest -g -O2   conftest.c cfortran_test.o   -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl >&5
configure:5594: $? = 0
configure:5650: icc -o conftest -g -O2   conftest.c cfortran_test.o   -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl >&5
configure:5650: $? = 0
configure:5693: result: lower case, underscore, no extra underscore
configure:5768: checking for Fortran flag to compile .f90 files
configure:5789: ifort -c -g  conftest.f90 >&5
configure:5789: $? = 0
configure:5799: result: none
configure:5824: checking for Fortran flag needed to accept free-form source
configure:5844: ifort -c -g  conftest.f90 >&5
configure:5844: $? = 0
configure:5854: result: none
configure:5879: checking for Fortran flag to compile preprocessed .F files
configure:5905: ifort -c -g  conftest.F >&5
configure:5905: $? = 0
configure:5916: ifort -c -g  conftest.F >&5
conftest.F(4): #error: can't find include file: ac_nonexistent.h
configure:5916: $? = 1
configure: failed program was:
|       program main
| 
| #if 1
| #include <ac_nonexistent.h>
|       choke me
| #endif
|       end
configure:5930: result: none
configure:5951: checking how to define symbols for preprocessed Fortran
configure:5974: ifort -c -g -DFOOBAR -DZORK=42  conftest.F >&5
configure:5974: $? = 0
configure:5984: result: -D
configure:6004: checking for Fortran flag to compile preprocessed .F90 files
configure:6030: ifort -c -g  conftest.F90 >&5
configure:6030: $? = 0
configure:6041: ifort -c -g  conftest.F90 >&5
conftest.F90(4): #error: can't find include file: ac_nonexistent.h
configure:6041: $? = 1
configure: failed program was:
|       program main
| 
| #if 1
| #include <ac_nonexistent.h>
|       choke me
| #endif
|       end
configure:6055: result: none
configure:6129: checking for gcc
configure:6161: result: icc
configure:6514: checking for C compiler version
configure:6523: icc --version >&5
icc (ICC) 19.0.4.243 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:6534: $? = 0
configure:6523: icc -v >&5
__INTEL_PRE_CFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
icc version 19.0.4.243 (gcc version 7.4.0 compatibility)
configure:6534: $? = 0
configure:6523: icc -V >&5
Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:6534: $? = 0
configure:6523: icc -qversion >&5
icc: command line warning #10006: ignoring unknown option '-qversion'
icc: command line error: no files specified; for help type "icc -help"
configure:6534: $? = 1
configure:6523: icc -version >&5
icc: command line warning #10006: ignoring unknown option '-version'
icc: command line error: no files specified; for help type "icc -help"
configure:6534: $? = 1
configure:6538: checking whether the compiler supports GNU C
configure:6576: result: yes
configure:6587: checking whether icc accepts -g
configure:6676: result: yes
configure:6696: checking for icc option to enable C11 features
configure:6729: result: none needed
configure:6904: checking for scotchfarchinit  in -lscotch
configure:6917: ifort -o conftest -g  -L/usr/lib  conftest.F90 -lscotch -lscotcherr  >&5
ld: cannot find -lscotch
ld: cannot find -lscotcherr
configure:6917: $? = 1
configure: failed program was:
|       program main
|       call scotchfarchinit
|       end
configure:6927: result: no
configure:6949: checking whether Scotch is usable
configure:6966: result: no, using bundled scotch instead
configure:6974: checking for flex
configure:6995: found /usr/bin/flex
configure:7006: result: flex
configure:7055: checking for lex output file root
configure:7068: flex conftest.l
configure:7072: $? = 0
configure:7080: result: lex.yy
configure:7095: checking for lex library
configure:7119: ifort -o conftest -g   conftest.F90  >&5
features.h(194): #error: #if: syntax error.
features.h(200): #error: #if: syntax error.
features.h(206): #error: #if: syntax error.
features.h(214): #error: #if: syntax error.
features.h(236): #error: #if: syntax error.
features.h(240): #error: #if: syntax error.
features.h(244): #error: #if: syntax error.
features.h(248): #error: #if: syntax error.
features.h(252): #error: #if: syntax error.
features.h(260): #error: #if: syntax error.
features.h(368): #error: #if: syntax error.
cdefs.h(164): #error: #if: syntax error.
cdefs.h(375): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stdarg.h(146): #error: #if: syntax error.
libio.h(293): #error: #if: syntax error.
stdio.h(626): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
lex.yy.c(33): #error: #if: syntax error.
stdint.h(43): #error: #if: syntax error.
stdint.h(75): #error: unknown fpp directive.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.

conftest.l(16): #error: incomplete macro call yyless.

lex.yy.c(928): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(949): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(993): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(1002): #error: incomplete macro call YY_INPUT.
configure:7119: $? = 33
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 37
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 2 "conftest.l"
| #ifdef __cplusplus
| extern "C"
| #endif
| int yywrap(void);
| #line 474 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 7 "conftest.l"
| 
| #line 658 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 11 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 12 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
| #ifdef __cplusplus
|     yyless ((yyinput () != 0));
| #else
|     yyless ((input () != 0));
| #endif
|   }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 19 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 20 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 21 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 802 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register yy_size_t number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 21 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| yywrap (void)
| {
|   return 1;
| }
| int
| main (void)
| {
|   return ! yylex ();
| }
configure:7119: ifort -o conftest -g   conftest.F90 -lfl  >&5
features.h(194): #error: #if: syntax error.
features.h(200): #error: #if: syntax error.
features.h(206): #error: #if: syntax error.
features.h(214): #error: #if: syntax error.
features.h(236): #error: #if: syntax error.
features.h(240): #error: #if: syntax error.
features.h(244): #error: #if: syntax error.
features.h(248): #error: #if: syntax error.
features.h(252): #error: #if: syntax error.
features.h(260): #error: #if: syntax error.
features.h(368): #error: #if: syntax error.
cdefs.h(164): #error: #if: syntax error.
cdefs.h(375): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stdarg.h(146): #error: #if: syntax error.
libio.h(293): #error: #if: syntax error.
stdio.h(626): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
lex.yy.c(33): #error: #if: syntax error.
stdint.h(43): #error: #if: syntax error.
stdint.h(75): #error: unknown fpp directive.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.

conftest.l(16): #error: incomplete macro call yyless.

lex.yy.c(928): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(949): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(993): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(1002): #error: incomplete macro call YY_INPUT.
configure:7119: $? = 33
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 37
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 2 "conftest.l"
| #ifdef __cplusplus
| extern "C"
| #endif
| int yywrap(void);
| #line 474 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 7 "conftest.l"
| 
| #line 658 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 11 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 12 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
| #ifdef __cplusplus
|     yyless ((yyinput () != 0));
| #else
|     yyless ((input () != 0));
| #endif
|   }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 19 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 20 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 21 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 802 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register yy_size_t number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 21 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| yywrap (void)
| {
|   return 1;
| }
| int
| main (void)
| {
|   return ! yylex ();
| }
configure:7119: ifort -o conftest -g   conftest.F90 -ll  >&5
features.h(194): #error: #if: syntax error.
features.h(200): #error: #if: syntax error.
features.h(206): #error: #if: syntax error.
features.h(214): #error: #if: syntax error.
features.h(236): #error: #if: syntax error.
features.h(240): #error: #if: syntax error.
features.h(244): #error: #if: syntax error.
features.h(248): #error: #if: syntax error.
features.h(252): #error: #if: syntax error.
features.h(260): #error: #if: syntax error.
features.h(368): #error: #if: syntax error.
cdefs.h(164): #error: #if: syntax error.
cdefs.h(375): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stdarg.h(146): #error: #if: syntax error.
libio.h(293): #error: #if: syntax error.
stdio.h(626): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.
lex.yy.c(33): #error: #if: syntax error.
stdint.h(43): #error: #if: syntax error.
stdint.h(75): #error: unknown fpp directive.
stddef.h(88): #error: #if: syntax error.
stddef.h(88): #error: #if: syntax error.

conftest.l(16): #error: incomplete macro call yyless.

lex.yy.c(928): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(949): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(993): #error: incomplete macro call YY_FATAL_ERROR.

lex.yy.c(1002): #error: incomplete macro call YY_INPUT.
configure:7119: $? = 33
configure: failed program was:
| 
| #line 3 "lex.yy.c"
| 
| #define  YY_INT_ALIGNED short int
| 
| /* A lexical scanner generated by flex */
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| #define YY_FLEX_SUBMINOR_VERSION 37
| #if YY_FLEX_SUBMINOR_VERSION > 0
| #define FLEX_BETA
| #endif
| 
| /* First, we deal with  platform-specific or compiler-specific issues. */
| 
| /* begin standard C headers. */
| #include <stdio.h>
| #include <string.h>
| #include <errno.h>
| #include <stdlib.h>
| 
| /* end standard C headers. */
| 
| /* flex integer type definitions */
| 
| #ifndef FLEXINT_H
| #define FLEXINT_H
| 
| /* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
| 
| #if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
| 
| /* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
|  * if you want the limit (max/min) macros for int types. 
|  */
| #ifndef __STDC_LIMIT_MACROS
| #define __STDC_LIMIT_MACROS 1
| #endif
| 
| #include <inttypes.h>
| typedef int8_t flex_int8_t;
| typedef uint8_t flex_uint8_t;
| typedef int16_t flex_int16_t;
| typedef uint16_t flex_uint16_t;
| typedef int32_t flex_int32_t;
| typedef uint32_t flex_uint32_t;
| #else
| typedef signed char flex_int8_t;
| typedef short int flex_int16_t;
| typedef int flex_int32_t;
| typedef unsigned char flex_uint8_t; 
| typedef unsigned short int flex_uint16_t;
| typedef unsigned int flex_uint32_t;
| 
| /* Limits of integral types. */
| #ifndef INT8_MIN
| #define INT8_MIN               (-128)
| #endif
| #ifndef INT16_MIN
| #define INT16_MIN              (-32767-1)
| #endif
| #ifndef INT32_MIN
| #define INT32_MIN              (-2147483647-1)
| #endif
| #ifndef INT8_MAX
| #define INT8_MAX               (127)
| #endif
| #ifndef INT16_MAX
| #define INT16_MAX              (32767)
| #endif
| #ifndef INT32_MAX
| #define INT32_MAX              (2147483647)
| #endif
| #ifndef UINT8_MAX
| #define UINT8_MAX              (255U)
| #endif
| #ifndef UINT16_MAX
| #define UINT16_MAX             (65535U)
| #endif
| #ifndef UINT32_MAX
| #define UINT32_MAX             (4294967295U)
| #endif
| 
| #endif /* ! C99 */
| 
| #endif /* ! FLEXINT_H */
| 
| #ifdef __cplusplus
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| /* C99 requires __STDC__ to be defined as 1. */
| #if defined (__STDC__)
| 
| #define YY_USE_CONST
| 
| #endif	/* defined (__STDC__) */
| #endif	/* ! __cplusplus */
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN (yy_start) = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START (((yy_start) - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart(yyin  )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #ifndef YY_BUF_SIZE
| #define YY_BUF_SIZE 16384
| #endif
| 
| /* The state buf must be large enough to hold one state per character in the main buffer.
|  */
| #define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
| 
| #ifndef YY_TYPEDEF_YY_BUFFER_STATE
| #define YY_TYPEDEF_YY_BUFFER_STATE
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| #endif
| 
| #ifndef YY_TYPEDEF_YY_SIZE_T
| #define YY_TYPEDEF_YY_SIZE_T
| typedef size_t yy_size_t;
| #endif
| 
| extern yy_size_t yyleng;
| 
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
|     #define YY_LESS_LINENO(n)
|     
| /* Return all but the first "n" matched characters back to the input stream. */
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		*yy_cp = (yy_hold_char); \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, (yytext_ptr)  )
| 
| #ifndef YY_STRUCT_YY_BUFFER_STATE
| #define YY_STRUCT_YY_BUFFER_STATE
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
|     int yy_bs_lineno; /**< The line count. */
|     int yy_bs_column; /**< The column count. */
|     
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| 
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 
| 	};
| #endif /* !YY_STRUCT_YY_BUFFER_STATE */
| 
| /* Stack of input buffers. */
| static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
| static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
| static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  *
|  * Returns the top of the stack, or NULL.
|  */
| #define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
|                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
|                           : NULL)
| 
| /* Same as previous macro, but useful when we know that the buffer stack is not
|  * NULL or when we need an lvalue. For internal use only.
|  */
| #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
| yy_size_t yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 0;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart (FILE *input_file  );
| void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
| YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
| void yy_delete_buffer (YY_BUFFER_STATE b  );
| void yy_flush_buffer (YY_BUFFER_STATE b  );
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
| void yypop_buffer_state (void );
| 
| static void yyensure_buffer_stack (void );
| static void yy_load_buffer_state (void );
| static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
| 
| #define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
| 
| YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
| YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
| YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
| 
| void *yyalloc (yy_size_t  );
| void *yyrealloc (void *,yy_size_t  );
| void yyfree (void *  );
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){ \
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! YY_CURRENT_BUFFER ){\
|         yyensure_buffer_stack (); \
| 		YY_CURRENT_BUFFER_LVALUE =    \
|             yy_create_buffer(yyin,YY_BUF_SIZE ); \
| 	} \
| 	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
| 
| /* Begin user sect3 */
| 
| typedef unsigned char YY_CHAR;
| 
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| 
| typedef int yy_state_type;
| 
| extern int yylineno;
| 
| int yylineno = 1;
| 
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state (void );
| static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
| static int yy_get_next_buffer (void );
| static void yy_fatal_error (yyconst char msg[]  );
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	(yytext_ptr) = yy_bp; \
| 	(yytext_ptr) -= (yy_more_len); \
| 	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
| 	(yy_hold_char) = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	(yy_c_buf_p) = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| /* This struct is not used in this scanner,
|    but its presence is necessary. */
| struct yy_trans_info
| 	{
| 	flex_int32_t yy_verify;
| 	flex_int32_t yy_nxt;
| 	};
| static yyconst flex_int16_t yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst flex_int16_t yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst flex_int32_t yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int32_t yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst flex_int16_t yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst flex_int16_t yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst flex_int16_t yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst flex_int16_t yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| extern int yy_flex_debug;
| int yy_flex_debug = 0;
| 
| static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
| yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
| ++(yy_lp); \
| goto find_rule; \
| }
| 
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() ((yy_more_flag) = 1)
| #define YY_MORE_ADJ (yy_more_len)
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #line 2 "conftest.l"
| #ifdef __cplusplus
| extern "C"
| #endif
| int yywrap(void);
| #line 474 "lex.yy.c"
| 
| #define INITIAL 0
| 
| #ifndef YY_NO_UNISTD_H
| /* Special case for "unistd.h", since it is non-ANSI. We include it way
|  * down here because we want the user's section 1 to have been scanned first.
|  * The user has a chance to override it with an option.
|  */
| #include <unistd.h>
| #endif
| 
| #ifndef YY_EXTRA_TYPE
| #define YY_EXTRA_TYPE void *
| #endif
| 
| static int yy_init_globals (void );
| 
| /* Accessor methods to globals.
|    These are made visible to non-reentrant scanners for convenience. */
| 
| int yylex_destroy (void );
| 
| int yyget_debug (void );
| 
| void yyset_debug (int debug_flag  );
| 
| YY_EXTRA_TYPE yyget_extra (void );
| 
| void yyset_extra (YY_EXTRA_TYPE user_defined  );
| 
| FILE *yyget_in (void );
| 
| void yyset_in  (FILE * in_str  );
| 
| FILE *yyget_out (void );
| 
| void yyset_out  (FILE * out_str  );
| 
| yy_size_t yyget_leng (void );
| 
| char *yyget_text (void );
| 
| int yyget_lineno (void );
| 
| void yyset_lineno (int line_number  );
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap (void );
| #else
| extern int yywrap (void );
| #endif
| #endif
| 
|     static void yyunput (int c,char *buf_ptr  );
|     
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char *,yyconst char *,int );
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * );
| #endif
| 
| #ifndef YY_NO_INPUT
| 
| #ifdef __cplusplus
| static int yyinput (void );
| #else
| static int input (void );
| #endif
| 
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
| 		{ \
| 		int c = '*'; \
| 		size_t n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else \
| 		{ \
| 		errno=0; \
| 		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
| 			{ \
| 			if( errno != EINTR) \
| 				{ \
| 				YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 				break; \
| 				} \
| 			errno=0; \
| 			clearerr(yyin); \
| 			} \
| 		}\
| \
| 
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* end tables serialization structures and prototypes */
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL_IS_OURS 1
| 
| extern int yylex (void);
| 
| #define YY_DECL int yylex (void)
| #endif /* !YY_DECL */
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| /** The main scanner function which does all the work.
|  */
| YY_DECL
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp, *yy_bp;
| 	register int yy_act;
|     
| #line 7 "conftest.l"
| 
| #line 658 "lex.yy.c"
| 
| 	if ( !(yy_init) )
| 		{
| 		(yy_init) = 1;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
|         /* Create the reject buffer large enough to save one state per allowed character. */
|         if ( ! (yy_state_buf) )
|             (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );
|             if ( ! (yy_state_buf) )
|                 YY_FATAL_ERROR( "out of dynamic memory in yylex()" );
| 
| 		if ( ! (yy_start) )
| 			(yy_start) = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! YY_CURRENT_BUFFER ) {
| 			yyensure_buffer_stack ();
| 			YY_CURRENT_BUFFER_LVALUE =
| 				yy_create_buffer(yyin,YY_BUF_SIZE );
| 		}
| 
| 		yy_load_buffer_state( );
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		(yy_more_len) = 0;
| 		if ( (yy_more_flag) )
| 			{
| 			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
| 			(yy_more_flag) = 0;
| 			}
| 		yy_cp = (yy_c_buf_p);
| 
| 		/* Support of yytext. */
| 		*yy_cp = (yy_hold_char);
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = (yy_start);
| 
| 		(yy_state_ptr) = (yy_state_buf);
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| yy_match:
| 		do
| 			{
| 			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*(yy_state_ptr)++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--(yy_state_ptr);
| 		(yy_lp) = yy_accept[yy_current_state];
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[(yy_lp)];
| 					{
| 					(yy_full_match) = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--(yy_state_ptr);
| 			(yy_lp) = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 11 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 12 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
| #ifdef __cplusplus
|     yyless ((yyinput () != 0));
| #else
|     yyless ((input () != 0));
| #endif
|   }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 19 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 20 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 21 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 802 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = (yy_hold_char);
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between YY_CURRENT_BUFFER and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state(  );
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++(yy_c_buf_p);
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = (yy_c_buf_p);
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer(  ) )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				(yy_did_buffer_switch_on_eof) = 0;
| 
| 				if ( yywrap( ) )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				(yy_c_buf_p) =
| 					(yytext_ptr) + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				(yy_c_buf_p) =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
| 
| 				yy_current_state = yy_get_previous_state(  );
| 
| 				yy_cp = (yy_c_buf_p);
| 				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| } /* end of yylex */
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| static int yy_get_next_buffer (void)
| {
|     	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
| 	register char *source = (yytext_ptr);
| 	register int number_to_move, i;
| 	int ret_val;
| 
| 	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
| 
| 	else
| 		{
| 			yy_size_t num_to_read =
| 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| 
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| 
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
| 			(yy_n_chars), num_to_read );
| 
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	if ( (yy_n_chars) == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart(yyin  );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
| 		/* Extend the array by 50%, plus the number we really need. */
| 		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
| 		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
| 		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
| 	}
| 
| 	(yy_n_chars) += number_to_move;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
| 	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
| 
| 	return ret_val;
| }
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
|     static yy_state_type yy_get_previous_state (void)
| {
| 	register yy_state_type yy_current_state;
| 	register char *yy_cp;
|     
| 	yy_current_state = (yy_start);
| 
| 	(yy_state_ptr) = (yy_state_buf);
| 	*(yy_state_ptr)++ = yy_current_state;
| 
| 	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
| 		{
| 		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*(yy_state_ptr)++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| }
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
|     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
| {
| 	register int yy_is_jam;
|     
| 	register YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*(yy_state_ptr)++ = yy_current_state;
| 
| 		return yy_is_jam ? 0 : yy_current_state;
| }
| 
|     static void yyunput (int c, register char * yy_bp )
| {
| 	register char *yy_cp;
|     
|     yy_cp = (yy_c_buf_p);
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = (yy_hold_char);
| 
| 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		register yy_size_t number_to_move = (yy_n_chars) + 2;
| 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
| 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
| 		register char *source =
| 				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
| 
| 		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
| 			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
| 
| 		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 	(yytext_ptr) = yy_bp;
| 	(yy_hold_char) = *yy_cp;
| 	(yy_c_buf_p) = yy_cp;
| }
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
|     static int yyinput (void)
| #else
|     static int input  (void)
| #endif
| 
| {
| 	int c;
|     
| 	*(yy_c_buf_p) = (yy_hold_char);
| 
| 	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
| 			/* This was really a NUL. */
| 			*(yy_c_buf_p) = '\0';
| 
| 		else
| 			{ /* need more input */
| 			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
| 			++(yy_c_buf_p);
| 
| 			switch ( yy_get_next_buffer(  ) )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart(yyin );
| 
| 					/*FALLTHROUGH*/
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap( ) )
| 						return EOF;
| 
| 					if ( ! (yy_did_buffer_switch_on_eof) )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					(yy_c_buf_p) = (yytext_ptr) + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
| 	*(yy_c_buf_p) = '\0';	/* preserve yytext */
| 	(yy_hold_char) = *++(yy_c_buf_p);
| 
| 	return c;
| }
| #endif	/* ifndef YY_NO_INPUT */
| 
| /** Immediately switch to a different input stream.
|  * @param input_file A readable stream.
|  * 
|  * @note This function does not reset the start condition to @c INITIAL .
|  */
|     void yyrestart  (FILE * input_file )
| {
|     
| 	if ( ! YY_CURRENT_BUFFER ){
|         yyensure_buffer_stack ();
| 		YY_CURRENT_BUFFER_LVALUE =
|             yy_create_buffer(yyin,YY_BUF_SIZE );
| 	}
| 
| 	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
| 	yy_load_buffer_state( );
| }
| 
| /** Switch to a different input buffer.
|  * @param new_buffer The new input buffer.
|  * 
|  */
|     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
| {
|     
| 	/* TODO. We should be able to replace this entire function body
| 	 * with
| 	 *		yypop_buffer_state();
| 	 *		yypush_buffer_state(new_buffer);
|      */
| 	yyensure_buffer_stack ();
| 	if ( YY_CURRENT_BUFFER == new_buffer )
| 		return;
| 
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 	yy_load_buffer_state( );
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| static void yy_load_buffer_state  (void)
| {
|     	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
| 	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
| 	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
| 	(yy_hold_char) = *(yy_c_buf_p);
| }
| 
| /** Allocate and initialize an input buffer state.
|  * @param file A readable stream.
|  * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
|  * 
|  * @return the allocated buffer state.
|  */
|     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer(b,file );
| 
| 	return b;
| }
| 
| /** Destroy the buffer.
|  * @param b a buffer created with yy_create_buffer()
|  * 
|  */
|     void yy_delete_buffer (YY_BUFFER_STATE  b )
| {
|     
| 	if ( ! b )
| 		return;
| 
| 	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
| 		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yyfree((void *) b->yy_ch_buf  );
| 
| 	yyfree((void *) b  );
| }
| 
| /* Initializes or reinitializes a buffer.
|  * This function is sometimes called more than once on the same buffer,
|  * such as during a yyrestart() or at EOF.
|  */
|     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
| 
| {
| 	int oerrno = errno;
|     
| 	yy_flush_buffer(b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
|     /* If b is the current buffer, then yy_init_buffer was _probably_
|      * called from yyrestart() or through yy_get_next_buffer.
|      * In that case, we don't want to reset the lineno or column.
|      */
|     if (b != YY_CURRENT_BUFFER){
|         b->yy_bs_lineno = 1;
|         b->yy_bs_column = 0;
|     }
| 
|         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
|     
| 	errno = oerrno;
| }
| 
| /** Discard all buffered characters. On the next scan, YY_INPUT will be called.
|  * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
|  * 
|  */
|     void yy_flush_buffer (YY_BUFFER_STATE  b )
| {
|     	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == YY_CURRENT_BUFFER )
| 		yy_load_buffer_state( );
| }
| 
| /** Pushes the new state onto the stack. The new state becomes
|  *  the current state. This function will allocate the stack
|  *  if necessary.
|  *  @param new_buffer The new state.
|  *  
|  */
| void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
| {
|     	if (new_buffer == NULL)
| 		return;
| 
| 	yyensure_buffer_stack();
| 
| 	/* This block is copied from yy_switch_to_buffer. */
| 	if ( YY_CURRENT_BUFFER )
| 		{
| 		/* Flush out information for old buffer. */
| 		*(yy_c_buf_p) = (yy_hold_char);
| 		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
| 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
| 		}
| 
| 	/* Only push if top exists. Otherwise, replace top. */
| 	if (YY_CURRENT_BUFFER)
| 		(yy_buffer_stack_top)++;
| 	YY_CURRENT_BUFFER_LVALUE = new_buffer;
| 
| 	/* copied from yy_switch_to_buffer. */
| 	yy_load_buffer_state( );
| 	(yy_did_buffer_switch_on_eof) = 1;
| }
| 
| /** Removes and deletes the top of the stack, if present.
|  *  The next element becomes the new top.
|  *  
|  */
| void yypop_buffer_state (void)
| {
|     	if (!YY_CURRENT_BUFFER)
| 		return;
| 
| 	yy_delete_buffer(YY_CURRENT_BUFFER );
| 	YY_CURRENT_BUFFER_LVALUE = NULL;
| 	if ((yy_buffer_stack_top) > 0)
| 		--(yy_buffer_stack_top);
| 
| 	if (YY_CURRENT_BUFFER) {
| 		yy_load_buffer_state( );
| 		(yy_did_buffer_switch_on_eof) = 1;
| 	}
| }
| 
| /* Allocates the stack if it does not exist.
|  *  Guarantees space for at least one push.
|  */
| static void yyensure_buffer_stack (void)
| {
| 	yy_size_t num_to_alloc;
|     
| 	if (!(yy_buffer_stack)) {
| 
| 		/* First allocation is just for 2 elements, since we don't know if this
| 		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
| 		 * immediate realloc on the next call.
|          */
| 		num_to_alloc = 1;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
| 								(num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 								  
| 		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
| 				
| 		(yy_buffer_stack_max) = num_to_alloc;
| 		(yy_buffer_stack_top) = 0;
| 		return;
| 	}
| 
| 	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
| 
| 		/* Increase the buffer to prepare for a possible push. */
| 		int grow_size = 8 /* arbitrary grow size */;
| 
| 		num_to_alloc = (yy_buffer_stack_max) + grow_size;
| 		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
| 								((yy_buffer_stack),
| 								num_to_alloc * sizeof(struct yy_buffer_state*)
| 								);
| 		if ( ! (yy_buffer_stack) )
| 			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
| 
| 		/* zero only the new slots.*/
| 		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
| 		(yy_buffer_stack_max) = num_to_alloc;
| 	}
| }
| 
| /** Setup the input buffer state to scan directly from a user-specified character buffer.
|  * @param base the character buffer
|  * @param size the size in bytes of the character buffer
|  * 
|  * @return the newly allocated buffer state object. 
|  */
| YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
| {
| 	YY_BUFFER_STATE b;
|     
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer(b  );
| 
| 	return b;
| }
| 
| /** Setup the input buffer state to scan a string. The next call to yylex() will
|  * scan from a @e copy of @a str.
|  * @param yystr a NUL-terminated string to scan
|  * 
|  * @return the newly allocated buffer state object.
|  * @note If you want to scan bytes that may contain NUL values, then use
|  *       yy_scan_bytes() instead.
|  */
| YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
| {
|     
| 	return yy_scan_bytes(yystr,strlen(yystr) );
| }
| 
| /** Setup the input buffer state to scan the given bytes. The next call to yylex() will
|  * scan from a @e copy of @a bytes.
|  * @param yybytes the byte buffer to scan
|  * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
|  * 
|  * @return the newly allocated buffer state object.
|  */
| YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
| {
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	yy_size_t i;
|     
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = _yybytes_len + 2;
| 	buf = (char *) yyalloc(n  );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < _yybytes_len; ++i )
| 		buf[i] = yybytes[i];
| 
| 	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer(buf,n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| }
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| static void yy_fatal_error (yyconst char* msg )
| {
|     	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| }
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
|         int yyless_macro_arg = (n); \
|         YY_LESS_LINENO(yyless_macro_arg);\
| 		yytext[yyleng] = (yy_hold_char); \
| 		(yy_c_buf_p) = yytext + yyless_macro_arg; \
| 		(yy_hold_char) = *(yy_c_buf_p); \
| 		*(yy_c_buf_p) = '\0'; \
| 		yyleng = yyless_macro_arg; \
| 		} \
| 	while ( 0 )
| 
| /* Accessor  methods (get/set functions) to struct members. */
| 
| /** Get the current line number.
|  * 
|  */
| int yyget_lineno  (void)
| {
|         
|     return yylineno;
| }
| 
| /** Get the input stream.
|  * 
|  */
| FILE *yyget_in  (void)
| {
|         return yyin;
| }
| 
| /** Get the output stream.
|  * 
|  */
| FILE *yyget_out  (void)
| {
|         return yyout;
| }
| 
| /** Get the length of the current token.
|  * 
|  */
| yy_size_t yyget_leng  (void)
| {
|         return yyleng;
| }
| 
| /** Get the current token.
|  * 
|  */
| 
| char *yyget_text  (void)
| {
|         return yytext;
| }
| 
| /** Set the current line number.
|  * @param line_number
|  * 
|  */
| void yyset_lineno (int  line_number )
| {
|     
|     yylineno = line_number;
| }
| 
| /** Set the input stream. This does not discard the current
|  * input buffer.
|  * @param in_str A readable stream.
|  * 
|  * @see yy_switch_to_buffer
|  */
| void yyset_in (FILE *  in_str )
| {
|         yyin = in_str ;
| }
| 
| void yyset_out (FILE *  out_str )
| {
|         yyout = out_str ;
| }
| 
| int yyget_debug  (void)
| {
|         return yy_flex_debug;
| }
| 
| void yyset_debug (int  bdebug )
| {
|         yy_flex_debug = bdebug ;
| }
| 
| static int yy_init_globals (void)
| {
|         /* Initialization is the same as for the non-reentrant scanner.
|      * This function is called from yylex_destroy(), so don't allocate here.
|      */
| 
|     (yy_buffer_stack) = 0;
|     (yy_buffer_stack_top) = 0;
|     (yy_buffer_stack_max) = 0;
|     (yy_c_buf_p) = (char *) 0;
|     (yy_init) = 0;
|     (yy_start) = 0;
| 
|     (yy_state_buf) = 0;
|     (yy_state_ptr) = 0;
|     (yy_full_match) = 0;
|     (yy_lp) = 0;
| 
| /* Defined in main.c */
| #ifdef YY_STDINIT
|     yyin = stdin;
|     yyout = stdout;
| #else
|     yyin = (FILE *) 0;
|     yyout = (FILE *) 0;
| #endif
| 
|     /* For future reference: Set errno on error, since we are called by
|      * yylex_init()
|      */
|     return 0;
| }
| 
| /* yylex_destroy is for both reentrant and non-reentrant scanners. */
| int yylex_destroy  (void)
| {
|     
|     /* Pop the buffer stack, destroying each element. */
| 	while(YY_CURRENT_BUFFER){
| 		yy_delete_buffer(YY_CURRENT_BUFFER  );
| 		YY_CURRENT_BUFFER_LVALUE = NULL;
| 		yypop_buffer_state();
| 	}
| 
| 	/* Destroy the stack itself. */
| 	yyfree((yy_buffer_stack) );
| 	(yy_buffer_stack) = NULL;
| 
|     yyfree ( (yy_state_buf) );
|     (yy_state_buf)  = NULL;
| 
|     /* Reset the globals. This is important in a non-reentrant scanner so the next time
|      * yylex() is called, initialization will occur. */
|     yy_init_globals( );
| 
|     return 0;
| }
| 
| /*
|  * Internal utility routines.
|  */
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
| {
| 	register int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| }
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen (yyconst char * s )
| {
| 	register int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| }
| #endif
| 
| void *yyalloc (yy_size_t  size )
| {
| 	return (void *) malloc( size );
| }
| 
| void *yyrealloc  (void * ptr, yy_size_t  size )
| {
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| }
| 
| void yyfree (void * ptr )
| {
| 	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
| }
| 
| #define YYTABLES_NAME "yytables"
| 
| #line 21 "conftest.l"
| 
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| yywrap (void)
| {
|   return 1;
| }
| int
| main (void)
| {
|   return ! yylex ();
| }
configure:7132: result: not found
configure:7136: WARNING: required lex library not found; giving up on flex
configure:7195: checking for bison
configure:7216: found /usr/bin/bison
configure:7227: result: bison -y
configure:7419: checking for the pthreads library -lpthreads
configure:7460: icc -o conftest -g -O2    conftest.c -lpthreads  >&5
ld: cannot find -lpthreads
configure:7460: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| /* end confdefs.h.  */
| #include <pthread.h>
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:7470: result: no
configure:7359: checking whether pthreads work without any flags
configure:7460: icc -o conftest -g -O2    conftest.c   >&5
/tmp/iccmq1dAZ.o: In function `main':
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:24: undefined reference to `pthread_join'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:25: undefined reference to `__pthread_register_cancel'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `pthread_create'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `__pthread_unregister_cancel'
configure:7460: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| /* end confdefs.h.  */
| #include <pthread.h>
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:7470: result: no
configure:7364: checking whether pthreads work with -Kthread
configure:7460: icc -o conftest -g -O2 -Kthread   conftest.c   >&5
icc: command line warning #10159: invalid argument for option '-K'
/tmp/iccFjbFJe.o: In function `main':
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:24: undefined reference to `pthread_join'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:25: undefined reference to `__pthread_register_cancel'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `pthread_create'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `__pthread_unregister_cancel'
configure:7460: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| /* end confdefs.h.  */
| #include <pthread.h>
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:7470: result: no
configure:7364: checking whether pthreads work with -kthread
configure:7460: icc -o conftest -g -O2 -kthread   conftest.c   >&5
icc: command line warning #10006: ignoring unknown option '-kthread'
/tmp/icclVIzBh.o: In function `main':
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:24: undefined reference to `pthread_join'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:25: undefined reference to `__pthread_register_cancel'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `pthread_create'
/gpfs/fs0/scratch/l/liuqy/liutia97/specfem3d_injection/conftest.c:26: undefined reference to `__pthread_unregister_cancel'
configure:7460: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| /* end confdefs.h.  */
| #include <pthread.h>
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:7470: result: no
configure:7419: checking for the pthreads library -llthread
configure:7460: icc -o conftest -g -O2    conftest.c -llthread  >&5
ld: cannot find -llthread
configure:7460: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| /* end confdefs.h.  */
| #include <pthread.h>
| #ifdef FC_DUMMY_MAIN
| #ifndef FC_DUMMY_MAIN_EQ_F77
| #  ifdef __cplusplus
|      extern "C"
| #  endif
|    int FC_DUMMY_MAIN() { return 1; }
| #endif
| #endif
| int
| main (void)
| {
| pthread_t th; pthread_join(th, 0);
|                      pthread_attr_init(0); pthread_cleanup_push(0, 0);
|                      pthread_create(0,0,0,0); pthread_cleanup_pop(0);
|   ;
|   return 0;
| }
configure:7470: result: no
configure:7364: checking whether pthreads work with -pthread
configure:7460: icc -o conftest -g -O2 -pthread   conftest.c   >&5
configure:7460: $? = 0
configure:7470: result: yes
configure:7489: checking for joinable pthread attribute
configure:7512: icc -o conftest -g -O2 -pthread   conftest.c   >&5
configure:7512: $? = 0
configure:7519: result: PTHREAD_CREATE_JOINABLE
configure:7527: checking if more special flags are required for pthreads
configure:7534: result: no
configure:7606: result: pthread found
configure:7650: result: SCOTCH is enabled
configure:7708: checking Fortran 90 module extension
configure:7731: ifort -c -g  conftest.F90 >&5
configure:7731: $? = 0
configure:7748: result: mod
configure:7757: checking Fortran 90 module inclusion flag
configure:7780: ifort -c -g  conftest.F90 >&5
configure:7780: $? = 0
configure:7795: ifort -c -g -Mconftest.dir -Mconftest.dir  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-Mconftest.dir'
ifort: command line warning #10006: ignoring unknown option '-Mconftest.dir'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7795: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7795: ifort -c -g -Iconftest.dir -Iconftest.dir  conftest.F90 >&5
configure:7795: $? = 0
configure:7816: result: -I
configure:7831: checking Fortran 90 module output flag
configure:7860: ifort -c -g -Jsub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-Jsub'
configure:7860: $? = 0
configure:7870: ifort -c -g -Jsub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-Jsub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -J sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-J'
ifort: warning #10145: no action performed for file 'sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -J sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-J'
ifort: error #10236: File not found:  'sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -fmod=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-fmod=sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -fmod=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-fmod=sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -moddir=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-moddir=sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -moddir=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-moddir=sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g +moddir=sub  conftest.F90 >&5
ifort: error #10236: File not found:  '+moddir=sub'
configure:7860: $? = 1
configure: failed program was:
| 
|       module conftest_module
|       contains
|       subroutine conftest_routine
|       write(*,'(a)') 'gotcha!'
|       end subroutine
|       end module
configure:7860: ifort -c -g -qmoddir=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-qmoddir=sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -qmoddir=sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-qmoddir=sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -mdir sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-mdir'
ifort: warning #10145: no action performed for file 'sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -mdir sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-mdir'
ifort: error #10236: File not found:  'sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -mod sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-mod'
ifort: warning #10145: no action performed for file 'sub'
configure:7860: $? = 0
configure:7870: ifort -c -g -mod sub  conftest.F90 >&5
ifort: command line warning #10006: ignoring unknown option '-mod'
ifort: error #10236: File not found:  'sub'
conftest.F90(3): error #7002: Error in opening the compiled module file.  Check INCLUDE paths.   [CONFTEST_MODULE]
      use conftest_module
----------^
compilation aborted for conftest.F90 (code 1)
configure:7870: $? = 1
configure: failed program was:
| 
|       program main
|       use conftest_module
|       call conftest_routine
|       end program
configure:7860: ifort -c -g -module sub  conftest.F90 >&5
configure:7860: $? = 0
configure:7870: ifort -c -g -module sub  conftest.F90 >&5
configure:7870: $? = 0
configure:7893: result: -module 
configure:7927: checking for stdio.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for stdlib.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for string.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for inttypes.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for stdint.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for strings.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for sys/stat.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for sys/types.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7927: checking for unistd.h
configure:7927: icc -c -g -O2  conftest.c >&5
configure:7927: $? = 0
configure:7927: result: yes
configure:7952: checking for emmintrin.h
configure:7952: icc -c -g -O2  conftest.c >&5
configure:7952: $? = 0
configure:7952: result: yes
configure:7960: checking for xmmintrin.h
configure:7960: icc -c -g -O2  conftest.c >&5
configure:7960: $? = 0
configure:7960: result: yes
configure:7969: checking for err.h
configure:7969: icc -c -g -O2  conftest.c >&5
configure:7969: $? = 0
configure:7969: result: yes
configure:8117: checking for C++ compiler version
configure:8126: mpicxx --version >&5
icpc (ICC) 19.0.4.243 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:8137: $? = 0
configure:8126: mpicxx -v >&5
__INTEL_PRE_CFLAGS options:  -gcc-name=core-gcc -gxx-name=core-g++
icpc version 19.0.4.243 (gcc version 7.4.0 compatibility)
configure:8137: $? = 0
configure:8126: mpicxx -V >&5
Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416
Copyright (C) 1985-2019 Intel Corporation.  All rights reserved.

configure:8137: $? = 0
configure:8126: mpicxx -qversion >&5
icpc: command line warning #10006: ignoring unknown option '-qversion'
icpc: command line error: no files specified; for help type "icpc -help"
configure:8137: $? = 1
configure:8141: checking whether the compiler supports GNU C++
configure:8169: mpicxx -c   conftest.cpp >&5
configure:8169: $? = 0
configure:8179: result: yes
configure:8190: checking whether mpicxx accepts -g
configure:8219: mpicxx -c -g  conftest.cpp >&5
configure:8219: $? = 0
configure:8279: result: yes
configure:8299: checking for mpicxx option to enable C++11 features
configure:8314: mpicxx  -c -g -O2  conftest.cpp >&5
configure:8314: $? = 0
configure:8332: result: none needed
configure:8402: checking how to run the C++ preprocessor
configure:8424: mpicxx -E  conftest.cpp
configure:8424: $? = 0
configure:8439: mpicxx -E  conftest.cpp
conftest.cpp(25): error #2379: cannot open source file "ac_nonexistent.h"
  #include <ac_nonexistent.h>
                             ^

configure:8439: $? = 2
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_EMMINTRIN 1
| #define HAVE_XMMINTRIN 1
| #define HAVE_ERR 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:8466: result: mpicxx -E
configure:8480: mpicxx -E  conftest.cpp
configure:8480: $? = 0
configure:8495: mpicxx -E  conftest.cpp
conftest.cpp(25): error #2379: cannot open source file "ac_nonexistent.h"
  #include <ac_nonexistent.h>
                             ^

configure:8495: $? = 2
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_EMMINTRIN 1
| #define HAVE_XMMINTRIN 1
| #define HAVE_ERR 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:8554: checking for mpi.h
configure:8554: mpicxx -c -g -O2  -I/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include  conftest.cpp >&5
configure:8554: $? = 0
configure:8554: result: yes
configure:8929: checking how to run the C preprocessor
configure:8955: icc -E  conftest.c
configure:8955: $? = 0
configure:8970: icc -E  conftest.c
conftest.c(25): error #2379: cannot open source file "ac_nonexistent.h"
  #include <ac_nonexistent.h>
                             ^

configure:8970: $? = 2
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_EMMINTRIN 1
| #define HAVE_XMMINTRIN 1
| #define HAVE_ERR 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:8997: result: icc -E
configure:9011: icc -E  conftest.c
configure:9011: $? = 0
configure:9026: icc -E  conftest.c
conftest.c(25): error #2379: cannot open source file "ac_nonexistent.h"
  #include <ac_nonexistent.h>
                             ^

configure:9026: $? = 2
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Specfem3D"
| #define PACKAGE_TARNAME "Specfem3D"
| #define PACKAGE_VERSION "4.0.0"
| #define PACKAGE_STRING "Specfem3D 4.0.0"
| #define PACKAGE_BUGREPORT "see the wiki"
| #define PACKAGE_URL ""
| #define FC_FUNC(name,NAME) name ## _
| #define FC_FUNC_(name,NAME) name ## _
| #define HAVE_SCOTCH 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_EMMINTRIN 1
| #define HAVE_XMMINTRIN 1
| #define HAVE_ERR 1
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:9893: FORCE_VECTORIZATION is enabled
configure:11770: checking for .git/config
configure:11784: result: yes
configure:11831: building from git repository
configure:12148: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by Specfem3D config.status 4.0.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on nia-login06.scinet.local

config.status:999: creating Makefile
config.status:999: creating setup/constants.h
config.status:999: creating setup/constants_tomography.h
config.status:999: creating setup/precision.h
config.status:999: creating setup/config.fh
config.status:999: creating setup/version.fh
config.status:999: creating ./external_libs/scotch/src/Makefile.inc
config.status:999: creating DATA/Par_file
config.status:999: creating DATA/CMTSOLUTION
config.status:999: creating DATA/STATIONS
config.status:999: creating setup/config.h
config.status:1183: executing bin commands
config.status:1183: executing obj commands
config.status:1183: executing DATA commands
config.status:1183: executing OUTPUT_FILES commands
config.status:1183: executing DATABASES_MPI commands
configure:13337: result: 
configure:13342: result: 
configure:13344: result: ./configure has completed and set up a default configuration to build.
configure:13346: result: 
configure:13348: result: You may wish to modify the following files before running a simulation:
configure:13350: result:   DATA/Par_file           Set parameters affecting the simulation.
configure:13352: result:   DATA/CMTSOLUTION        Set the source parameters before running the solver.
configure:13354: result:   DATA/STATIONS           Set the receiver stations before running the solver.
configure:13356: result: 

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_ADIOS2_CONFIG_set=
ac_cv_env_ADIOS2_CONFIG_value=
ac_cv_env_ADIOS_CONFIG_set=
ac_cv_env_ADIOS_CONFIG_value=
ac_cv_env_ASDF_LIBS_set=
ac_cv_env_ASDF_LIBS_value=
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=icc
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CUDA_FLAGS_set=
ac_cv_env_CUDA_FLAGS_value=
ac_cv_env_CUDA_INC_set=
ac_cv_env_CUDA_INC_value=
ac_cv_env_CUDA_LIB_set=
ac_cv_env_CUDA_LIB_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=set
ac_cv_env_CXX_value=mpicxx
ac_cv_env_FCFLAGS_set=
ac_cv_env_FCFLAGS_value=
ac_cv_env_FC_set=set
ac_cv_env_FC_value=ifort
ac_cv_env_FLAGS_CHECK_set=
ac_cv_env_FLAGS_CHECK_value=
ac_cv_env_HDF5_FCFLAGS_set=
ac_cv_env_HDF5_FCFLAGS_value=
ac_cv_env_HDF5_INC_set=
ac_cv_env_HDF5_INC_value=
ac_cv_env_HDF5_LIBS_set=
ac_cv_env_HDF5_LIBS_value=
ac_cv_env_HIPCC_set=
ac_cv_env_HIPCC_value=
ac_cv_env_HIP_FLAGS_set=
ac_cv_env_HIP_FLAGS_value=
ac_cv_env_HIP_INC_set=
ac_cv_env_HIP_INC_value=
ac_cv_env_HIP_LIB_set=
ac_cv_env_HIP_LIB_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LOCAL_PATH_IS_ALSO_GLOBAL_set=
ac_cv_env_LOCAL_PATH_IS_ALSO_GLOBAL_value=
ac_cv_env_MPICC_set=
ac_cv_env_MPICC_value=
ac_cv_env_MPIFC_set=set
ac_cv_env_MPIFC_value=mpif90
ac_cv_env_MPILIBS_set=
ac_cv_env_MPILIBS_value=
ac_cv_env_MPI_INC_set=
ac_cv_env_MPI_INC_value=
ac_cv_env_NVCC_set=
ac_cv_env_NVCC_value=
ac_cv_env_OMP_FCFLAGS_set=
ac_cv_env_OMP_FCFLAGS_value=
ac_cv_env_OMP_LIB_set=
ac_cv_env_OMP_LIB_value=
ac_cv_env_SCOTCH_DIR_set=
ac_cv_env_SCOTCH_DIR_value=
ac_cv_env_SCOTCH_INCLUDEDIR_set=
ac_cv_env_SCOTCH_INCLUDEDIR_value=
ac_cv_env_SCOTCH_LIBDIR_set=
ac_cv_env_SCOTCH_LIBDIR_value=
ac_cv_env_USE_BUNDLED_SCOTCH_set=
ac_cv_env_USE_BUNDLED_SCOTCH_value=
ac_cv_env_YACC_set=
ac_cv_env_YACC_value=
ac_cv_env_YFLAGS_set=
ac_cv_env_YFLAGS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_fc_compiler_gnu=no
ac_cv_fc_dummy_main=none
ac_cv_fc_freeform=none
ac_cv_fc_libs=' -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl'
ac_cv_fc_mangling='lower case, underscore, no extra underscore'
ac_cv_fc_module_ext=mod
ac_cv_fc_module_flag=-I
ac_cv_fc_module_output_flag='-module '
ac_cv_fc_pp_define=-D
ac_cv_fc_pp_srcext_F90=none
ac_cv_fc_pp_srcext_F=none
ac_cv_fc_srcext_f90=none
ac_cv_file__git_config=yes
ac_cv_fortran_dummy_main=none
ac_cv_header_emmintrin_h=yes
ac_cv_header_err_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_mpi_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_header_xmmintrin_h=yes
ac_cv_host=x86_64-unknown-linux-gnu
ac_cv_lib_lex='not found'
ac_cv_lib_scotch_scotchfarchinit_=no
ac_cv_objext=o
ac_cv_prog_CPP='icc -E'
ac_cv_prog_CXXCPP='mpicxx -E'
ac_cv_prog_LEX=flex
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_CC=icc
ac_cv_prog_cc_c11=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_cxx_11=no
ac_cv_prog_cxx_cxx11=
ac_cv_prog_cxx_g=yes
ac_cv_prog_cxx_stdcxx=
ac_cv_prog_fc_g=yes
ac_cv_prog_fc_v=-v
ac_cv_prog_lex_root=lex.yy

## ----------------- ##
## Output variables. ##
## ----------------- ##

ADIOS2_CFLAGS=''
ADIOS2_CLIBS=''
ADIOS2_CONFIG=''
ADIOS2_FCFLAGS=''
ADIOS2_LIBS=''
ADIOS_CONFIG=''
ADIOS_FCFLAGS=''
ADIOS_LIBS=''
ASDF_LIBS=''
CC='icc'
CFLAGS='-g -O2'
COND_ADIOS2_FALSE=''
COND_ADIOS2_TRUE='#'
COND_ADIOS_FALSE=''
COND_ADIOS_TRUE='#'
COND_ASDF_FALSE=''
COND_ASDF_TRUE='#'
COND_CUDA10_FALSE=''
COND_CUDA10_TRUE='#'
COND_CUDA11_FALSE=''
COND_CUDA11_TRUE='#'
COND_CUDA12_FALSE=''
COND_CUDA12_TRUE='#'
COND_CUDA4_FALSE=''
COND_CUDA4_TRUE='#'
COND_CUDA5_FALSE=''
COND_CUDA5_TRUE='#'
COND_CUDA6_FALSE=''
COND_CUDA6_TRUE='#'
COND_CUDA7_FALSE=''
COND_CUDA7_TRUE='#'
COND_CUDA8_FALSE=''
COND_CUDA8_TRUE='#'
COND_CUDA9_FALSE=''
COND_CUDA9_TRUE='#'
COND_CUDA_FALSE=''
COND_CUDA_PLUS_FALSE=''
COND_CUDA_PLUS_TRUE='#'
COND_CUDA_TRUE='#'
COND_DEBUG_FALSE=''
COND_DEBUG_TRUE='#'
COND_HDF5_FALSE=''
COND_HDF5_TRUE='#'
COND_HIP_CUDA10_FALSE=''
COND_HIP_CUDA10_TRUE='#'
COND_HIP_CUDA11_FALSE=''
COND_HIP_CUDA11_TRUE='#'
COND_HIP_CUDA12_FALSE=''
COND_HIP_CUDA12_TRUE='#'
COND_HIP_CUDA5_FALSE=''
COND_HIP_CUDA5_TRUE='#'
COND_HIP_CUDA6_FALSE=''
COND_HIP_CUDA6_TRUE='#'
COND_HIP_CUDA7_FALSE=''
COND_HIP_CUDA7_TRUE='#'
COND_HIP_CUDA8_FALSE=''
COND_HIP_CUDA8_TRUE='#'
COND_HIP_CUDA9_FALSE=''
COND_HIP_CUDA9_TRUE='#'
COND_HIP_FALSE=''
COND_HIP_MI100_FALSE=''
COND_HIP_MI100_TRUE='#'
COND_HIP_MI250_FALSE=''
COND_HIP_MI250_TRUE='#'
COND_HIP_MI25_FALSE=''
COND_HIP_MI25_TRUE='#'
COND_HIP_MI50_FALSE=''
COND_HIP_MI50_TRUE='#'
COND_HIP_MI8_FALSE=''
COND_HIP_MI8_TRUE='#'
COND_HIP_PLATFORM_AMD_FALSE=''
COND_HIP_PLATFORM_AMD_TRUE='#'
COND_HIP_PLATFORM_NVIDIA_FALSE=''
COND_HIP_PLATFORM_NVIDIA_TRUE='#'
COND_HIP_TRUE='#'
COND_MPI_FALSE='#'
COND_MPI_TRUE=''
COND_OMP_FALSE=''
COND_OMP_TRUE='#'
COND_SCOTCH_FALSE='#'
COND_SCOTCH_TRUE=''
COND_VECTORIZATION_FALSE='#'
COND_VECTORIZATION_TRUE=''
COND_VTK_FALSE=''
COND_VTK_TRUE='#'
CONFIGURE_FLAGS='FC=ifort FCFLAGS=-g'
CPP='icc -E'
CPPFLAGS=' -DFORCE_VECTORIZATION'
CUDA_CPPFLAGS=''
CUDA_FLAGS=''
CUDA_INC=''
CUDA_LDFLAGS=''
CUDA_LIB=''
CUDA_LIBS=''
CUSTOM_MPI_TYPE='MPI_REAL'
CUSTOM_REAL='SIZE_REAL'
CXX='mpicxx'
CXXCPP='mpicxx -E'
CXXFLAGS='-g -O2'
DEFS='-DHAVE_CONFIG_H'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EXEEXT=''
FC='ifort'
FCENV=''
FCFLAGS='-g'
FCFLAGS_F90=''
FCFLAGS_F=''
FCFLAGS_f90='-module ./obj -I./obj -I. '
FCLIBS=' -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1 -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4 -L/gpfs/fs1/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64 -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../../lib64/ -L/lib/../lib64 -L/lib/../lib64/ -L/usr/lib/../lib64 -L/usr/lib/../lib64/ -L/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/lib/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.1/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin/ -L/scinet/intel/2019u4/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64_lin/gcc4.4/ -L/gpfs/fs1/scinet/niagara/software/2019b/core/bin/../lib/gcc/x86_64-pc-linux-gnu/7.4.0/../../../ -L/lib64 -L/lib/ -L/usr/lib64 -L/usr/lib -lifport -lifcoremt -limf -lsvml -lm -lipgo -lirc -lpthread -lirc_s -ldl'
FC_DEFINE='-D'
FC_MODDIR='./obj'
FC_MODEXT='mod'
FC_MODINC='-I'
FC_MODOUT='-module ${ac_empty}'
FLAGS_CHECK='-xHost -fpe0 -ftz -assume buffered_io -assume byterecl -align sequence -std08 -diag-disable 6477 -implicitnone -gen-interfaces -warn all -O3 -check nobounds -DFORCE_VECTORIZATION'
GIT_COMMIT_VERSION='d2105bb86f9a57085bec59f34877cf0ffbe52bac'
GIT_DATE_VERSION='2023-07-18 10:19:13 +0200'
GIT_PACKAGE_VERSION='v4.0.0-93-gd2105bb8'
HDF5_FCFLAGS=''
HDF5_INC=''
HDF5_INCLUDES=''
HDF5_LIBS=''
HIPCC=''
HIPCC_PROG=''
HIPCONFIG_PROG=''
HIP_CPPFLAGS=''
HIP_FLAGS=''
HIP_INC=''
HIP_LDFLAGS=''
HIP_LIB=''
HIP_LIBS=''
LDFLAGS=''
LEX=':'
LEXLIB=''
LEX_OUTPUT_ROOT='lex.yy'
LIBOBJS=''
LIBS=''
LOCAL_PATH_IS_ALSO_GLOBAL='true'
LTLIBOBJS=''
MPICC='mpicc'
MPIFC='mpif90'
MPILIBS=''
MPI_INC='/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include'
MPI_INCLUDES=' -I/scinet/niagara/software/2019b/opt/intel-2019u4/openmpi/4.0.1-hpcx2.5/include'
NVCC=''
NVCC_PROG=''
OBJEXT='o'
OMP_FCFLAGS='-qopenmp'
OMP_LIB=''
PACKAGE_BUGREPORT='see the wiki'
PACKAGE_NAME='Specfem3D'
PACKAGE_STRING='Specfem3D 4.0.0'
PACKAGE_TARNAME='Specfem3D'
PACKAGE_URL=''
PACKAGE_VERSION='4.0.0'
PATH_SEPARATOR=':'
PTHREAD_CC='icc'
PTHREAD_CFLAGS='-pthread'
PTHREAD_LIBS=''
SCOTCH_DIR='./external_libs/scotch'
SCOTCH_INCLUDEDIR='./external_libs/scotch/include'
SCOTCH_LIBDIR='./external_libs/scotch/lib'
SHELL='/bin/sh'
USE_BUNDLED_SCOTCH='1'
VTK_INCLUDES=''
VTK_LDFLAGS=''
VTK_LIBS=''
VTK_MAJOR=''
YACC='bison -y'
YFLAGS=''
ac_ct_CC='icc'
ac_ct_CXX=''
ac_ct_FC=''
ac_empty=''
acx_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-unknown-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-unknown-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
srcdir='.'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Specfem3D"
#define PACKAGE_TARNAME "Specfem3D"
#define PACKAGE_VERSION "4.0.0"
#define PACKAGE_STRING "Specfem3D 4.0.0"
#define PACKAGE_BUGREPORT "see the wiki"
#define PACKAGE_URL ""
#define FC_FUNC(name,NAME) name ## _
#define FC_FUNC_(name,NAME) name ## _
#define HAVE_SCOTCH 1
#define HAVE_STDIO_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_STRINGS_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define STDC_HEADERS 1
#define HAVE_EMMINTRIN 1
#define HAVE_XMMINTRIN 1
#define HAVE_ERR 1
#define SPECFEM3D_RELEASE_VERSION 0
#define SPECFEM3D_GIT_REVISION "v4.0.0-93-gd2105bb8"
#define SPECFEM3D_GIT_HASH "d2105bb86f9a57085bec59f34877cf0ffbe52bac"
#define SPECFEM3D_GIT_DATE "2023-07-18 10:19:13 +0200"
#define SPECFEM3D_GIT_BRANCH "devel"
#define SPECFEM3D_VERSION "4.0.0"

configure: exit 0
